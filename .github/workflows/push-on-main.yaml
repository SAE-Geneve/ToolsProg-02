name: Test and build API
on: push

env:
  DB_HOST: localhost
  DB_USER: postgres
  DB_NAME: postgres
  DB_PASS: postgres

  DOCKER_REPO: 923-game-api

jobs:
  python-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_NAME: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.1

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run tests
        run: poetry run pytest

  build-push-dockerhub:
    runs-on: ubuntu-latest
    # Uncomment this when you want to make the CI actually depend on tests succeeding before pushing an update to the hub
    # needs: python-tests

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.DOCKER_REPO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/${{ vars.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true